name: Build

on:
  workflow_dispatch: {}
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-14]

    steps:
      - name: Maximize build space
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        shell: bash
        run: |
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/powershell
          sudo rm -rf /usr/share/swift
          df -h

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Bazel cache
        uses: actions/cache@v2
        with:
          path: |
            ./.bazel-cache/
          key: v3-${{ matrix.os }}-bazel-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}-${{ github.run_id }}
          restore-keys: |
            v3-${{ matrix.os }}-bazel-${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}-
            v3-${{ matrix.os }}-bazel-refs/heads/main-
            v3-${{ matrix.os }}-bazel-

      - name: Install libtinfo5
        if: ${{ matrix.os == 'ubuntu-22.04' }}
        run: sudo apt-get install -y libtinfo5

      - name: Build all targets
        run: bazel build //...

      - name: Run all tests
        run: bazel test //...

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
